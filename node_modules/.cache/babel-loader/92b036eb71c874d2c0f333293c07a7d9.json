{"ast":null,"code":"var _jsxFileName = \"/Users/yvangatete/Downloads/students-keeper-app-part-1-starting-forked (1)/src/components/App.jsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\nfunction App() {\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    axios.get('http://localhost:5000/notes').then(response => {\n      setNotes(response.data);\n    }).catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  const addNote = newNote => {\n    // Ensure newNote has content before sending\n    if (newNote.title.trim() === \"\" && newNote.content.trim() === \"\") {\n      console.error('Empty note not added.');\n      return;\n    }\n    axios.post('http://localhost:5000/notes', newNote).then(response => {\n      console.log('Response data:', response.data); // This will output the response data to the console\n      setNotes(prevNotes => [...prevNotes, response.data]);\n    }).catch(error => {\n      console.error('Error posting data: ', error);\n      console.log('Error response data:', error.response.data); // This will output the error response data to the console, if available\n    });\n  };\n  const deleteNote = id => {\n    console.log(\"Attempting to delete note with id:\", id); // This will confirm the ID value\n\n    if (!id) {\n      console.error(\"Cannot delete note without an ID.\");\n      return;\n    }\n    axios.delete(\"http://localhost:5000/notes/\".concat(id)).then(() => {\n      setNotes(prevNotes => prevNotes.filter(note => note._id !== id));\n    }).catch(error => console.error('Error deleting data: ', error));\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddNote, {\n    onAdd: addNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), notes.map(note => /*#__PURE__*/React.createElement(Note, {\n    key: note._id,\n    id: note._id,\n    title: note.title,\n    content: note.content,\n    onDelete: deleteNote,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}\nexport default App;","map":{"version":3,"names":["React","useState","useEffect","axios","Header","Footer","Note","AddNote","App","notes","setNotes","get","then","response","data","catch","error","console","addNote","newNote","title","trim","content","post","log","prevNotes","deleteNote","id","delete","concat","filter","note","_id","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","onAdd","map","key","onDelete"],"sources":["/Users/yvangatete/Downloads/students-keeper-app-part-1-starting-forked (1)/src/components/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    axios.get('http://localhost:5000/notes')\n      .then(response => {\n        setNotes(response.data);\n      })\n      .catch(error => console.error('Error fetching data: ', error));\n  }, []);\n  \n\n  const addNote = (newNote) => {\n    // Ensure newNote has content before sending\n    if (newNote.title.trim() === \"\" && newNote.content.trim() === \"\") {\n      console.error('Empty note not added.');\n      return;\n    }\n  \n    axios.post('http://localhost:5000/notes', newNote)\n      .then(response => {\n        console.log('Response data:', response.data); // This will output the response data to the console\n        setNotes(prevNotes => [...prevNotes, response.data]);\n      })\n      .catch(error => {\n        console.error('Error posting data: ', error);\n        console.log('Error response data:', error.response.data); // This will output the error response data to the console, if available\n      });\n  };\n  \n  const deleteNote = (id) => {\n    console.log(\"Attempting to delete note with id:\", id); // This will confirm the ID value\n  \n    if (!id) {\n      console.error(\"Cannot delete note without an ID.\");\n      return;\n    }\n  \n    axios.delete(`http://localhost:5000/notes/${id}`)\n      .then(() => {\n        setNotes(prevNotes => prevNotes.filter(note => note._id !== id));\n      })\n      .catch(error => console.error('Error deleting data: ', error));\n  };\n  \n\n  return (\n    <div>\n      <Header />\n      <AddNote onAdd={addNote} />\n      {notes.map((note) => (\n        <Note\n          key={note._id}\n          id={note._id}\n          title={note.title}\n          content={note.content}\n          onDelete={deleteNote}\n        />\n      ))}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}